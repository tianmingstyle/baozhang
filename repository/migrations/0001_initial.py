# -*- coding: utf-8 -*-
# Generated by Django 1.11.17 on 2019-02-02 03:48
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Article',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=64, verbose_name='\u6807\u9898')),
                ('summary', models.CharField(max_length=128, verbose_name='\u7b80\u4ecb')),
                ('detail', models.TextField(verbose_name='\u8be6\u7ec6\u5185\u5bb9')),
                ('ctime', models.DateField(auto_now_add=True, verbose_name='ctetime')),
                ('readnum', models.IntegerField(default=0)),
                ('commentnum', models.IntegerField(default=0)),
                ('upcount', models.IntegerField(default=0)),
                ('downcount', models.IntegerField(default=0)),
                ('article_type_id', models.IntegerField(choices=[(1, 'Python'), (2, 'Linux'), (3, 'Openstack'), (4, 'GoLang')], default=None)),
            ],
            options={
                'db_table': 'Article',
                'verbose_name_plural': '\u6587\u7ae0\u8868',
            },
        ),
        migrations.CreateModel(
            name='Baozhang',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=32, verbose_name='biaoti')),
                ('detail', models.TextField(verbose_name='xiangxineirong')),
                ('status', models.IntegerField(choices=[(1, 'wait_to_process'), (2, 'processing'), (3, 'finish to process')], default=1, verbose_name='zhuangtai')),
                ('ctime', models.DateField(auto_now_add=True, verbose_name='create_time')),
                ('process_time', models.DateField(auto_now_add=True, verbose_name='process time')),
                ('solution', models.TextField(null=True)),
                ('pj', models.IntegerField(choices=[(1, 'good'), (2, 'soso'), (3, 'bad')], default=2, verbose_name='review')),
            ],
            options={
                'db_table': 'baozhangbiao',
                'verbose_name_plural': 'baozhangbiao',
            },
        ),
        migrations.CreateModel(
            name='Blog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=32, verbose_name='biaoti')),
                ('suffix', models.CharField(max_length=32, unique=True, verbose_name='houzui')),
                ('theme', models.CharField(max_length=32, verbose_name='zhuti')),
                ('summary', models.CharField(max_length=128, verbose_name='jitang')),
            ],
            options={
                'db_table': 'blog',
                'verbose_name_plural': 'blog',
            },
        ),
        migrations.CreateModel(
            name='Classification',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=32, verbose_name='\u5206\u7c7b')),
                ('blog', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='repository.Blog')),
            ],
            options={
                'db_table': 'classification',
                'verbose_name_plural': '\u5206\u7c7b\u8868',
            },
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.CharField(max_length=256, verbose_name='pinglun')),
                ('ctime', models.DateField(auto_now_add=True, verbose_name='crete time')),
                ('article', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='repository.Article')),
                ('pcomment', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='repository.Comment')),
            ],
            options={
                'db_table': 'comment',
                'verbose_name_plural': 'comment',
            },
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=32, verbose_name='\u6807\u7b7e\u540d')),
                ('blog', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='repository.Blog')),
            ],
            options={
                'db_table': 'tag',
                'verbose_name_plural': '\u6807\u7b7e\u8868',
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username', models.CharField(max_length=32, verbose_name='\u7528\u6237')),
                ('pwd', models.CharField(max_length=64, verbose_name='\u5bc6\u7801')),
                ('email', models.EmailField(max_length=254, verbose_name='email')),
                ('img', models.ImageField(upload_to='./static/imgs', verbose_name='\u7528\u6237\u56fe\u50cf')),
                ('fans', models.ManyToManyField(blank=True, null=True, to='repository.User')),
            ],
            options={
                'db_table': 'all_user',
                'verbose_name_plural': 'all_user',
            },
        ),
        migrations.CreateModel(
            name='User_Article',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('feels', models.IntegerField(choices=[(1, 'yes'), (0, 'no')], verbose_name='Ding or Cai')),
                ('aid', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='repository.Article')),
                ('uid', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='repository.User')),
            ],
            options={
                'db_table': 'user_article',
                'verbose_name_plural': 'user_article',
            },
        ),
        migrations.AddField(
            model_name='blog',
            name='uid',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='repository.User'),
        ),
        migrations.AddField(
            model_name='baozhang',
            name='processor',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='pbzd', to='repository.User'),
        ),
        migrations.AddField(
            model_name='baozhang',
            name='uid',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bzd', to='repository.User'),
        ),
        migrations.AddField(
            model_name='article',
            name='blog',
            field=models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='repository.Blog'),
        ),
        migrations.AddField(
            model_name='article',
            name='cls',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='repository.Classification'),
        ),
        migrations.AddField(
            model_name='article',
            name='tag',
            field=models.ManyToManyField(to='repository.Tag'),
        ),
        migrations.AddField(
            model_name='article',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='repository.User'),
        ),
        migrations.AlterUniqueTogether(
            name='user_article',
            unique_together=set([('uid', 'aid')]),
        ),
    ]
